"use strict";(self.webpackChunkpractica_docs=self.webpackChunkpractica_docs||[]).push([[491],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=s(r),m=a,f=g["".concat(p,".").concat(m)]||g[m]||c[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},3808:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={id:"features",sidebar_position:5},p="Features and practices",s={unversionedId:"features",id:"features",title:"Features and practices",description:"WIP - This doc is being written these days",source:"@site/docs/features-reference.md",sourceDirName:".",slug:"/features",permalink:"/features",editUrl:"https://github.com/practicajs/practica/tree/main/docs/docs/features-reference.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"features",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"OpenAPI",permalink:"/decisions/openapi"},next:{title:"Short guide",permalink:"/contribution/contribution-short-guide"}},u={},c=[{value:"1. Logger",id:"1-logger",level:2},{value:"1.1 Logger Library",id:"11-logger-library",level:3},{value:"1.2 Prevent infinite logger serialization loop",id:"12-prevent-infinite-logger-serialization-loop",level:3},{value:"2. Configuration",id:"2-configuration",level:2},{value:"2.1 Configuration retriever module",id:"21-configuration-retriever-module",level:3},{value:"3. Testing experience",id:"3-testing-experience",level:2},{value:"3.1 Slow tests detection",id:"31-slow-tests-detection",level:3},{value:"3.2 Autocomplete",id:"32-autocomplete",level:3}],g={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"features-and-practices"},"Features and practices"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"WIP - This doc is being written these days"))),(0,o.kt)("p",null,"This list will outline all the capabilities and roadmap of Practica.js"),(0,o.kt)("p",null,"Here will come a filter panel to search by categories, what's strategic, and more"),(0,o.kt)("h2",{id:"1-logger"},"1. Logger"),(0,o.kt)("h3",{id:"11-logger-library"},"1.1 Logger Library"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"What:")," A reputable and hardened logger"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tags:")," #strategic #logger"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83d\udc77\ud83c\udffe Status:")," ",(0,o.kt)("img",{src:"/img/full.png"}),"  Production-ready, more hardening is welcome"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc6 Chosen libraries:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pinojs/pino"},"Pino.js")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com"},"(Decision log here)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udf81 Bundles:")," example-flow, full-flow"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc1 CLI flags:")," --logger=true|false"),(0,o.kt)("h3",{id:"12-prevent-infinite-logger-serialization-loop"},"1.2 Prevent infinite logger serialization loop"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"What:")," Limit logged JSON depth when cyclic reference is introduced"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tags:")," #logger"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83d\udc77\ud83c\udffe Status:")," ",(0,o.kt)("img",{src:"/img/partial.png"}),"  Idea, not implemented"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc6 Chosen libraries:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pinojs/pino"},"Pino.js")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com"},"(Decision log here)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udf81 Bundles:")," example-flow, full-flow"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc1 CLI flags:")," None, always true"),(0,o.kt)("h2",{id:"2-configuration"},"2. Configuration"),(0,o.kt)("h3",{id:"21-configuration-retriever-module"},"2.1 Configuration retriever module"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"What:")," A configuration retriever module that packs good practices"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tags:")," #strategic #configuration"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83d\udc77\ud83c\udffe Status:")," ",(0,o.kt)("img",{src:"/img/full.png"}),"  Production-ready, more hardening is welcome"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc6 Chosen libraries:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mozilla/node-convict"},"Convict")," ",(0,o.kt)("a",{parentName:"p",href:"/decisions/configuration-library"},"(Decision log here)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udf81 Bundles:")," example-flow, full-flow"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc1 CLI flags:")," -"),(0,o.kt)("h2",{id:"3-testing-experience"},"3. Testing experience"),(0,o.kt)("h3",{id:"31-slow-tests-detection"},"3.1 Slow tests detection"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"What:")," Slow tests automatically shown clearly in the console and exported to csv + json reports"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tags:")," #dx #testing"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83d\udc77\ud83c\udffe Status:")," ",(0,o.kt)("img",{src:"/img/full.png"}),"  Production-ready, more hardening is welcome"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc6 Chosen libraries:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/sholzmayer/jest-performance-reporter"},"jest-performance-reporter")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udf81 Bundles:")," example-flow, full-flow"),(0,o.kt)("h3",{id:"32-autocomplete"},"3.2 Autocomplete"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"What:")," When running tests in watch mode and choosing filename or test name patterns autocomplete will assist you"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tags:")," #dx #testing"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83d\udc77\ud83c\udffe Status:")," ",(0,o.kt)("img",{src:"/img/full.png"}),"  Production-ready, more hardening is welcome"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfc6 Chosen libraries:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/jest-community/jest-watch-typeahead"},"jest-watch-typeahead")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udf81 Bundles:")," example-flow, full-flow"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Additional 100 features will come here")))}m.isMDXComponent=!0}}]);